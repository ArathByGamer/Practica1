# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pVj4eBTVX0gT0UPoe8DsQEe9EAyEE8ts
"""

import tensorflow as tf
import numpy as np

centimetros = np.array([10, 20, 30, 40, 50], dtype=float)
metros = np.array([0.1, 0.2, 0.3, 0.4, 0.5], dtype=float)

oculta1 = tf.keras.layers.Dense(units=3, input_shape=[1])
oculta2 = tf.keras.layers.Dense(units=3)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1, oculta2, salida])

modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

print("Comenzando entrenamiento...")
historial = modelo.fit(centimetros, metros, epochs=1000, verbose=False)
print("Modelo entrenado!!!")

import matplotlib.pyplot as plt
plt.xlabel("# Epoca")
plt.ylabel("Magnitud de pérdida")
plt.plot(historial.history["loss"])

print("Realizar una predicción")
resultado = modelo.predict([100.0])
print("El resultado es " + str(resultado) + " metros")